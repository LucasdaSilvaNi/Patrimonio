@model SAM.Web.ViewModels.AssetViewModel

@*<div class="form-group">
        @Html.LabelFor(model => model.numeroDocumento, "Pesquisar Documento", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.numeroDocumento, new { htmlAttributes = new { @class = "form-control documento", @maxlength = 15 } })
            @Html.ValidationMessageFor(model => Model.NumberDoc, "", new { @class = "text-danger" })
        </div>
    </div>*@
<div class="form-group">
    @Html.LabelFor(model => model.NumberDoc, "Número de documento", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => Model.NumberDoc, new { htmlAttributes = new { @class = "form-control", @maxlength = 14 } })
        @Html.ValidationMessageFor(model => Model.NumberDoc, "", new { @class = "text-danger" })
    </div>
</div>



<div id="div_Material">
    <div class="form-group">
        @*Material Item*@
        @Html.LabelFor(model => model.materialItemPesquisa, "Pesquisar Item Material", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => Model.materialItemPesquisa, new { htmlAttributes = new { @class = "form-control materialItemId", @maxlength = "20" } })
            @Html.ValidationMessageFor(model => Model.MaterialItemCode, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-1">
            <button type="button" id="btnConsultar" data-toggle="tooltip" data-placement="top" data-original-title="Click para consultar o item de material no SIAFISICO!" class="btn btn-default">
                <span class="glyphicon glyphicon-search"></span>
            </button>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaterialItemCode, "Item Material", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => Model.MaterialItemCode, new { htmlAttributes = new { @class = "form-control materialItemCode", @readonly = "readonly" } })
        </div>
        <div class="col-md-6">
            @Html.EditorFor(model => Model.MaterialItemDescription, new { htmlAttributes = new { @class = "form-control materialItemDescription", @readonly = "readonly" } })
        </div>
    </div>
</div>

<div class="form-group">
    @*Descrição Resumida de Item*@
    @Html.LabelFor(model => model.ShortDescriptionItemId, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-7">
        @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @*chapa Antiga*@
    @Html.LabelFor(model => model.OldNumberIdentification, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-2">
        @Html.EditorFor(model => model.OldNumberIdentification, new { htmlAttributes = new { @class = "form-control somenteNumerosInicial", @min = "1", @max = "2147483647", @maxlength = "10" } })
    </div>
    <div class="col-md-1">
        @Html.EditorFor(model => model.DiferenciacaoChapaAntiga, new { htmlAttributes = new { @class = "form-control somenteNumerosInicial", @maxlength = "7" } })
    </div>
</div>

<script>
    $(document).ready(function () {
        sam.materialItem.Load();
        sam.utils.somenteNumerosPartial();
        sam.utils.maskcpfcnpj();
    });
</script>

