@model PagedList.StaticPagedList<SAM.Web.Models.MaterialGroup>
@using PagedList.Mvc;

@{ViewBag.Title = "Grupos Materiais Cadastrados";}
@Html.Partial("_GridNewButtons")

<table class="table " id="result-tables">
    <tr>
        <th>@Html.ActionLink(HttpUtility.HtmlDecode(@Html.DisplayNameFor(model => model.FirstOrDefault().Code).ToString()), "Index", new { sortOrder = ViewBag.CodeSortParm })</th>
        <th>@Html.ActionLink(HttpUtility.HtmlDecode(@Html.DisplayNameFor(model => model.FirstOrDefault().Description).ToString()), "Index", new { sortOrder = ViewBag.CodeSortParm })</th>
        <th>@Html.ActionLink(HttpUtility.HtmlDecode(@Html.DisplayNameFor(model => model.FirstOrDefault().LifeCycle).ToString()) , "Index", new { sortOrder = ViewBag.CodeSortParm })</th>
        <th>@Html.ActionLink(HttpUtility.HtmlDecode(@Html.DisplayNameFor(model => model.FirstOrDefault().RateDepreciationMonthly).ToString()), "Index", new { sortOrder = ViewBag.CodeSortParm })</th>
        <th>@Html.ActionLink(HttpUtility.HtmlDecode(@Html.DisplayNameFor(model => model.FirstOrDefault().ResidualValue).ToString()), "Index", new { sortOrder = ViewBag.CodeSortParm })</th>
        <th>@Html.ActionLink(HttpUtility.HtmlDecode(@Html.DisplayNameFor(model => model.FirstOrDefault().Status).ToString()), "Index", new { sortOrder = ViewBag.CodeSortParm })</th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>@Html.DisplayFor(modelItem => item.Code)</td>
        <td>@Html.DisplayFor(modelItem => item.Description)</td>
        <td>@Html.DisplayFor(modelItem => item.LifeCycle)</td>
        <td>@Html.DisplayFor(modelItem => item.RateDepreciationMonthly)</td>
        <td>@Html.DisplayFor(modelItem => item.ResidualValue)</td>
        <td>@Html.DisplayFor(modelItem => item.Status)</td>
        <td class="acoes">
            @Html.Partial("_Acoes", @item)
        </td>
    </tr>
}

</table>

    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentFilter }))

@section Scripts {
    <script>
        sam.transaction.controleTransacaoIndexPadrao('@HttpContext.Current.User.Identity.Name', '@HttpContext.Current.Request.CurrentExecutionFilePath');
    </script>
}