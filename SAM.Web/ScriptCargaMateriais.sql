-- Carrega do banco do SAM ou do Legado para as tabelas do Patrimonio
-- Carrega Grupo/Classe/Material/Item do Material

DECLARE @GM_ID INT
DECLARE @GM_CODE INT
DECLARE @GM_DESCRIPTION VARCHAR(100)
DECLARE @GM_ROWID int

DECLARE @CM_ID INT
DECLARE @CM_CODE INT
DECLARE @CM_DESCRIPTION VARCHAR(100)
DECLARE @CM_ROWID int

DECLARE @M_ID INT
DECLARE @M_CODE INT
DECLARE @M_DESCRIPTION VARCHAR(100)
DECLARE @M_ROWID int

DECLARE @IM_ID INT
DECLARE @IM_CODE INT
DECLARE @IM_DESCRIPTION VARCHAR(100)

DECLARE GM_CURSOR CURSOR FOR
	SELECT GM.TB_GRUPO_MATERIAL_CODIGO, GM.TB_GRUPO_MATERIAL_DESCRICAO, GM.TB_GRUPO_MATERIAL_ID FROM TB_GRUPO_MATERIAL GM;
	OPEN GM_CURSOR;
		FETCH NEXT FROM GM_CURSOR INTO @GM_CODE,@GM_DESCRIPTION,@GM_ID;
			WHILE @@FETCH_STATUS = 0
			BEGIN
				INSERT INTO[SAM].[DBO].[MATERIALGROUP]([CODE], [DESCRIPTION], [STATUS]) VALUES(@GM_CODE,@GM_DESCRIPTION,1);
				SET @GM_ROWID = SCOPE_IDENTITY();

				DECLARE CM_CURSOR CURSOR FOR
					SELECT CM.TB_CLASSE_MATERIAL_CODIGO, CM.TB_CLASSE_MATERIAL_DESCRICAO, CM.TB_GRUPO_MATERIAL_ID FROM TB_CLASSE_MATERIAL CM WHERE CM.TB_GRUPO_MATERIAL_ID = @GM_ID;
					OPEN CM_CURSOR
						FETCH NEXT FROM CM_CURSOR INTO @CM_CODE,@CM_DESCRIPTION,@CM_ID;
						WHILE @@FETCH_STATUS = 0
						BEGIN
							INSERT INTO[SAM].[DBO].[MATERIALCLASS]([CODE], [DESCRIPTION], [STATUS], [MATERIALGROUPID]) VALUES(@CM_CODE,@CM_DESCRIPTION,1,@GM_ROWID);
							SET @CM_ROWID = SCOPE_IDENTITY();

							DECLARE M_CURSOR CURSOR FOR
								SELECT M.TB_MATERIAL_CODIGO, M.TB_MATERIAL_DESCRICAO, M.TB_MATERIAL_ID FROM TB_MATERIAL M WHERE M.TB_CLASSE_MATERIAL_ID= @CM_ID;
								OPEN M_CURSOR
									FETCH NEXT FROM M_CURSOR INTO @M_CODE,@M_DESCRIPTION,@M_ID;
										WHILE @@FETCH_STATUS = 0
										BEGIN
											INSERT INTO[SAM].[DBO].[MATERIAL]values(@M_CODE,@M_DESCRIPTION,@CM_ROWID,1);
											SET @M_ROWID = SCOPE_IDENTITY();

											DECLARE IM_CURSOR CURSOR FOR
												SELECT IM.TB_ITEM_MATERIAL_CODIGO, IM.TB_ITEM_MATERIAL_DESCRICAO, IM.TB_ITEM_MATERIAL_ID FROM TB_ITEM_MATERIAL IM WHERE IM.TB_MATERIAL_ID = @M_ID;
												OPEN IM_CURSOR
													FETCH NEXT FROM IM_CURSOR INTO @IM_CODE,@IM_DESCRIPTION,@IM_ID;
														WHILE @@FETCH_STATUS = 0
														BEGIN
															INSERT INTO[SAM].[DBO].[MATERIALITEM]values(@IM_CODE,@IM_DESCRIPTION,@M_ROWID,1);

															FETCH NEXT FROM IM_CURSOR INTO @IM_CODE,@IM_DESCRIPTION,@IM_ID;
														END
												CLOSE IM_CURSOR;
											DEALLOCATE IM_CURSOR;

											FETCH NEXT FROM M_CURSOR INTO @M_CODE,@M_DESCRIPTION,@M_ID;
										END
								CLOSE M_CURSOR;
							DEALLOCATE M_CURSOR;


							FETCH NEXT FROM CM_CURSOR INTO @CM_CODE,@CM_DESCRIPTION,@CM_ID;
						END
					CLOSE CM_CURSOR;
				DEALLOCATE CM_CURSOR;
				
				FETCH NEXT FROM GM_CURSOR INTO @GM_CODE,@GM_DESCRIPTION,@GM_ID;
			END
	CLOSE GM_CURSOR;
DEALLOCATE GM_CURSOR;